/***
    Issue Link - https://leetcode.com/problems/coin-change-2/
*/

class Solution {
    public int change(int amount, int[] coins) {
        return totalWays(coins, 0, amount, new HashMap<String, Integer>());
    }
    private int totalWays(int []coins, int currentCoin, int amount, HashMap<String, Integer> memo){
        if(amount == 0)
            return 1;
        if(currentCoin >= coins.length)
            return 0;
        
        String currKey = currentCoin + "-" + amount;
        if(memo.containsKey(currKey))
            return memo.get(currKey);
        int currentCoinVal = coins[currentCoin];
        int consider = 0;
        if(currentCoinVal <= amount)
            consider = totalWays(coins, currentCoin, amount-currentCoinVal, memo);
        int notConsider = totalWays(coins, currentCoin+1 , amount, memo);
        
        memo.put(currKey, consider+notConsider);
        return memo.get(currKey);
    }
}