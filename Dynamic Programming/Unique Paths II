/**
    Issue Link - https://leetcode.com/problems/unique-paths-ii/
*/

class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        return possibleWays(obstacleGrid, 0, 0, obstacleGrid.length, obstacleGrid[0].length, new HashMap<String, Integer>());
    }
    private int possibleWays(int[][] grid, int currentRow, int currentCol, int m, int n, HashMap<String, Integer> memo){
        if(currentRow >= m || currentCol >= n || grid[currentRow][currentCol] == 1)
            return 0;
        
        if(currentRow == m-1 && currentCol == n-1)
            return 1;
        
        String currKey = currentRow + "-" + currentCol;
        if(memo.containsKey(currKey))
            return memo.get(currKey);
        
        int rightWay = possibleWays(grid, currentRow, currentCol+1, m, n, memo);
        int downWay = possibleWays(grid, currentRow+1, currentCol, m, n, memo);
        
        memo.put(currKey, rightWay+downWay);
        return memo.get(currKey);
    }
}